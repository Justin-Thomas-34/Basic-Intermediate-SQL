In this lesson, you will learn: 

- How to write queries with a CASE WHEN statement included
- How to reuse conditions that we used in WHERE and apply them in CASE WHEN
- How to group data based on the CASE WHEN statement


CASE WHEN statements are structured in the following way

Copy
CASE WHEN <condition> THEN <output>
		 WHEN <condition> THEN <output>
		 ELSE <output>
END AS <column_name>


CASE WHEN statement using a single condition
SELECT CASE WHEN years BETWEEN 2010 AND 2019 THEN '2010-2019'
						WHEN years BETWEEN 2020 AND 2029 THEN '2020-2029'
            ELSE 'Error' -- ELSE catches all the cases not covered above
       END AS decade, -- always remember to close a CASE WHEN with the END AS syntax
			 years
       
FROM meta_revenue
;

CASE WHEN statement using multiple conditions
-- we don't need to use brackets/parentheses below but it improves readability
SELECT CASE WHEN (geo_user = 'DK' OR geo_advertiser = 'DK') THEN 'Denmark'
            ELSE 'Other'
       END AS denmark_column,
       geo_user,
       geo_advertiser
       
FROM meta_revenue
;

Exercise
Create a custom column that segments the data into three values: 
1) The number of clicks between 0 and 500 as “01. 0-500”
2) The number of clicks between 501 and 1,000 as “02. 501-1000”
3) Anything else as “03. Other”

SELECT CASE WHEN clicks BETWEEN 0 AND 500 THEN '01. <= 500'
						WHEN clicks BETWEEN 501 AND 1000 THEN '02. 501-1000'
            ELSE '03. Other'
       END AS click_band
            
FROM meta_revenue
;

Grouping data using CASE WHEN

Applying CASE WHEN in a GROUP BY statement
SELECT CASE WHEN years BETWEEN 2010 AND 2019 THEN '2010-2019'
						WHEN years BETWEEN 2020 AND 2029 THEN '2020-2029'
            ELSE 'Other'
       END AS decade,
			 SUM(revenue) AS total_revenue
       
FROM meta_revenue

GROUP BY decade -- we group by the column we just created - this is SUPER useful
;

Exercise
Create a custom column that segments the data into three values: 
1) The age between 18 and 34 as “01. 18-34”
2) The age between as “02. 34+”
3) Anything else as “03. Other”

What is the total revenue generated by each age group in 2020?
SELECT CASE WHEN age_bucket_user IN ('18-24', '25-34') THEN '01. 18-34'
						WHEN age_bucket_user IN ('35-44', '45-54', '55-64', '65+') THEN '02. 34+'
            ELSE '03. Other'
       END AS age_group,
			 SUM(revenue) AS total_revenue
       
FROM meta_revenue

WHERE years = '2020'

GROUP BY age_group
;


Key points to take away from this lesson: 
CASE WHEN allows you to create custom columns based on conditions
Conditions work the same between CASE WHEN and WHERE 
A valuable use case of CASE WHEN is grouping your data based on a custom column created within the same query

